/*-
 * Copyright (C) 2007 Erik Larsson
 * 
 * All rights reserved.
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA
 */

package org.catacombae.hfsexplorer.types.hfs;

import org.catacombae.hfsexplorer.Util;
import java.io.PrintStream;

/** This class was generated by CStructToJavaClass. */
public class ExtDataRec {
    /*
     * struct ExtDataRec
     * size: 16 bytes
     * description: 
     * 
     * BP  Size  Type              Identifier  Description       
     * ----------------------------------------------------------
     * 0   4*4   ExtDescriptor[4]  extDataRec  extent data record
     */
    
    public static final int STRUCTSIZE = 16;
    
    private final ExtDescriptor extDataRec;
    
    public ExtDataRec(byte[] data, int offset) {
	extDataRec = new ExtDescriptor(data, offset+0);
    }
    
    public static int length() { return STRUCTSIZE; }
    
    /** extent data record */
    public ExtDescriptor getExtDataRec() { return extDataRec; }
    
    public void printFields(PrintStream ps, String prefix) {
	ps.println(prefix + " extDataRec: ");
	getExtDataRec().print(ps, prefix+"  ");
    }
    
    public void print(PrintStream ps, String prefix) {
	ps.println(prefix + "ExtDataRec:");
	printFields(ps, prefix);
    }
    
    public byte[] getBytes() {
	byte[] result = new byte[STRUCTSIZE];
	byte[] tempData;
	int offset = 0;
	tempData = extDataRec.getBytes();
	System.arraycopy(tempData, 0, result, offset, tempData.length); offset += tempData.length;
	return result;
    }
}
